Description: API Gateway and lambda
AWSTemplateFormatVersion: "2010-09-09"


Parameters:
  S3KeyPath:
    Type: String
  HostedZoneId:
    Type: String
    Description: 'Route 53 Hosted Zone ID for the domain'
    Default: 'ZR2VAHLVW389H'

Resources:
  LambdaFunctionCreate:
    Type: "AWS::Lambda::Function"
    Description: Handles scaling up of ECS and ALB stacks
    Properties:
      FunctionName: "task-master-service-create"
      Handler: app/src/handler/stack_handler.handle_create
      Runtime: python3.13
      MemorySize: 128
      Code:
        S3Bucket: "eb-solutions-code-deployment"
        S3Key: !Sub "services/task-master/${S3KeyPath}/service.zip"
      Role: arn:aws:iam::654918520080:role/task-master-role
      Timeout: 60
      Tags:
        - Key: CostCenter
          Value: services.task-master

  LambdaFunctionDelete:
    Type: "AWS::Lambda::Function"
    Description: Handles scaling down of ECS and ALB stacks
    Properties:
      FunctionName: "task-master-service-delete"
      Handler: app/src/handler/stack_handler.handle_delete
      Runtime: python3.13
      MemorySize: 128
      Code:
        S3Bucket: "eb-solutions-code-deployment"
        S3Key: !Sub "services/task-master/${S3KeyPath}/service.zip"
      Role: arn:aws:iam::654918520080:role/task-master-role
      Timeout: 60
      Tags:
        - Key: CostCenter
          Value: services.task-master

  LambdaPermissionCreate:
    DependsOn: [ LambdaFunctionCreate ]
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt LambdaFunctionCreate.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Join [ "", [ "arn:aws:execute-api:", Ref: "AWS::Region", ":", Ref: "AWS::AccountId", ":", Ref: "ApiGateway", "/*" ] ]

  LambdaPermissionDelete:
    DependsOn: [ LambdaFunctionDelete ]
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt LambdaFunctionDelete.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Join [ "", [ "arn:aws:execute-api:", Ref: "AWS::Region", ":", Ref: "AWS::AccountId", ":", Ref: "ApiGateway", "/*" ] ]

  ApiGateway:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Name: "task-master-apigw"

  ApiGatewayResourceStack:
    DependsOn: [ ApiGateway ]
    Type: "AWS::ApiGateway::Resource"
    Properties:
      RestApiId: !Ref ApiGateway
      ParentId: !GetAtt ApiGateway.RootResourceId
      PathPart: "stack"

  ApiGatewayStackMethodCreate:
    DependsOn: [ LambdaFunctionCreate, ApiGateway, ApiGatewayResourceStack ]
    Type: "AWS::ApiGateway::Method"
    Properties:
      RestApiId: !Ref ApiGateway
      ResourceId: !Ref ApiGatewayResourceStack
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunctionCreate.Arn}/invocations

  ApiGatewayStackMethodDelete:
    DependsOn: [ LambdaFunctionDelete, ApiGateway, ApiGatewayResourceStack ]
    Type: "AWS::ApiGateway::Method"
    Properties:
      RestApiId: !Ref ApiGateway
      ResourceId: !Ref ApiGatewayResourceStack
      AuthorizationType: NONE
      HttpMethod: DELETE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunctionDelete.Arn}/invocations

  ApiGatewayDeployment:
    DependsOn: [ ApiGatewayStackMethodCreate, ApiGatewayStackMethodDelete ]
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId: !Ref ApiGateway
      StageName: prod

  DomainName:
    Type: 'AWS::ApiGateway::DomainName'
    Properties:
      # This is the *.otterandcow.com ACM Cert ARN
      CertificateArn: arn:aws:acm:us-east-1:654918520080:certificate/b4d67bb3-5d56-4d5e-bf83-cdf7cb04d4ba
      DomainName: stack.otterandcow.com

  Mapping:
    DependsOn: [ ApiGateway, DomainName ]
    Type: 'AWS::ApiGateway::BasePathMapping'
    Properties:
      DomainName: !Ref DomainName
      RestApiId: !Ref ApiGateway
      Stage: prod

  ApiGwRoute53:
    DependsOn: [ DomainName ]
    Type: 'AWS::Route53::RecordSet'
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: stack.otterandcow.com.
      Type: A
      AliasTarget:
        HostedZoneId: !GetAtt DomainName.RegionalHostedZoneId
        DNSName: !GetAtt DomainName.RegionalDomainName
